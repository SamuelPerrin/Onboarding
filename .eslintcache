[{"C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\index.js":"1","C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\App.js":"2","C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\reportWebVitals.js":"3","C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\Form.js":"4","C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\schema.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1758,"mtime":1611789377969,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1730,"mtime":1611786605045,"results":"10","hashOfConfig":"7"},{"size":510,"mtime":1611869200106,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1fgbsne",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\index.js",[],["24","25"],"C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\App.js",[],"C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\Form.js",["26"],"import React from 'react';\r\n\r\nfunction Form(props) {\r\n  const { username, email, password, terms } = props.values;\r\n  const { submit, update, disabled, errors } = props;\r\n\r\n  const handleChange = evt => {\r\n    const {name, value, checked, type} = evt.target;\r\n    const valueToUse = type === 'checkbox' ? checked : value;\r\n    update(name, valueToUse)\r\n  }\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    submit()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label> Name:\r\n          <input \r\n            type='text'\r\n            name='username'\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <span className='error'>{errors.username}</span>\r\n        <label> Email:\r\n          <input \r\n            type='text'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <span className='error'>{errors.email}</span>\r\n        <label>Password:\r\n          <input \r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        {errors.password && <span className='error'>{errors.password}</span>}\r\n        <label>\r\n          <input\r\n            type='checkbox'\r\n            name='terms'\r\n            value={terms}\r\n            checked={terms}\r\n            onChange={handleChange}\r\n          /> I agree to the <a href=\"#\">Terms and Conditions</a>.\r\n        </label>\r\n        {errors.terms && <span className='error'>{errors.terms}</span>}\r\n        <button disabled={disabled} onClick={handleSubmit}>submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form","C:\\Users\\Sam\\OneDrive\\Desktop\\lambda\\unit2\\3.3\\onboarding\\src\\schema.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":55,"column":29,"nodeType":"33","endLine":55,"endColumn":41},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]